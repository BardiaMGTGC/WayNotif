#!/bin/bash

# Add the following entry to /etc/sudoers (using either nano or visudo)
# phablet ALL=(ALL) NOPASSWD:/usr/bin/waydroid

USERNAME=$(whoami)

# export DBus session address
export $(cat /run/user/$(id -u)/dbus-session)

# Check if Waydroid is installed.
if [ $(LANG=C type waydroid 2>/dev/null | wc -l) = 1 ]; then
   true
else
   echo "Waydroid is not installed"
   exit 1
fi


if [ ! -f /var/lib/waydroid/images/system.img ]; then
   echo "Waydroid is not initialized. Run waydroid init."
fi

# Check whether or not Waydroid or even started in the first place.
if waydroid status | grep STOPPED; then
   exit 1
   echo "Waydroid is not running"
fi

# Check if waynotif cache directory exists.
if [ ! -d $HOME/.cache/waynotif ]; then
   echo "Creating cache directory."
   mkdir -p $HOME/.cache/waynotif
fi

# Check if it is the first time waynotif is running.
if [ ! -d $HOME/.cache/waynotif/notifications/ ] || [ ! -d $HOME/.cache/waynotif/notifications2 ]; then
   echo "First run."
   mkdir $HOME/.cache/waynotif/notifications $HOME/.cache/waynotif/notifications2
   touch $HOME/.cache/waynotif/notifications/initial_notifications
   touch $HOME/.cache/waynotif/notifications2/initial_notifications
   touch $HOME/.cache/waynotif/notifications/commonname_clean_1
   touch $HOME/.cache/waynotif/notifications/commonname_clean_2
   touch $HOME/.cache/waynotif/notifications/notif_seperate-1
   touch $HOME/.cache/waynotif/notifications/notif_seperate-2
   touch $HOME/.cache/waynotif/notifications2/first_run
fi

# Check if cronjob is set in place.
if crontab -l | grep waynotif >> /dev/null; then
   echo "Cronjob already exists"
else
   sudo mount -o remount,rw /
   (crontab -u "$USERNAME" -l; echo "* * * * * $HOME/waynotif") | crontab -u "$USERNAME" -
   (crontab -u "$USERNAME" -l; echo "* * * * * sleep 30; $HOME/waynotif") | crontab -u "$USERNAME" -
   echo "Cronjob has been added"
   if [ "$whoami" == "phablet" ]; then
      sudo mount -o remount,ro /
   fi
fi


if [ -f $HOME/.cache/waynotif/notifications/ran ]; then
   # Get notifications from dumpsys (not 100% accurate).
   echo dumpsys notification | sudo waydroid shell | egrep NotificationRecord | awk -F\| '{print $2}' > $HOME/.cache/waynotif/notifications/initial_notifications
   int=1
   rm $HOME/.cache/waynotif/notifications/commonname -f
   rm $HOME/.cache/waynotif/notifications/android_process -f

   # Run a loop to convert package name to common name
   while IFS= read -r line; do

        NAME=$(echo $line)

	# This if condition checks for a notification from android system which breaks the script so it fixes it here.
        if [ "$NAME" == "android" ]; then
	   touch $HOME/.cache/waynotif/notifications/android_process
           true
        else
           waydroid app list | grep -B 1 $name | grep -w 'Name' | cut -c 7- >> $HOME/.cache/waynotif/notifications/commonname
        fi

        int=$((int+1))

   done < $HOME/.cache/waynotif/notifications/initial_notifications

   # Check if there are no notifications (commonname file is made in last loop).
   if [ ! -f $HOME/.cache/waynotif/notifications/commonname ]; then
      echo "No notifications available. up"
      exit 1
   fi

   # Clean the files and make them ready for next stage.
   awk '!seen[$0]++' $HOME/.cache/waynotif/notifications/commonname > $HOME/.cache/waynotif/notifications/commonname_clean
   cat $HOME/.cache/waynotif/notifications/commonname | uniq --count | cut -c7 - > $HOME/.cache/waynotif/notifications/commonname_notif_number

   int2=1

   # Put Number of notifications in seperate file so that we can use them while creating the notification popup.
   while IFS= read -r line; do

        echo $line > $HOME/.cache/waynotif/notifications/notif_seperate-$int2
        int2=$((int2+1))

   done < $HOME/.cache/waynotif/notifications/commonname_notif_number

   int3=1

   # Seperate common name of notification in seperate files that we can use them while creating the notification popup.
   while IFS= read -r line; do

        echo $line > $HOME/.cache/waynotif/notifications/commonname_clean_$int3
        int3=$((int3+1))

   done < $HOME/.cache/waynotif/notifications/commonname_clean

   # Ready up all variables for before doing our main checks.
   GDBus_Num=$(cat $HOME/.cache/waynotif/notifications/notif_seperate-1)

   GDBus_Name=$(cat $HOME/.cache/waynotif/notifications/commonname_clean_1)

   GDBus_Num2=$(cat $HOME/.cache/waynotif/notifications/notif_seperate-2)

   GDBus_Name2=$(cat $HOME/.cache/waynotif/notifications/commonname_clean_2)

   string_AppName="Waydroid $GDBus_Name"

   string_AppNum="You have $GDBus_Num notification(s)"

   string_AppName2="Waydroid $GDBus_Name2"

   string_AppNum2="You have $GDBus_Num2 notification(s)"

   GDBus_CommonName1=$(cat $HOME/.cache/waynotif/notifications/commonname_clean_1)

   GDBus_CommonName2=$(cat $HOME/.cache/waynotif/notifications2/commonname_clean_1)

   GDBus_compare=$(cat $HOME/.cache/waynotif/notifications2/notif_seperate-1)

   echo "ran up"

   if [ "$GDBus_Num" == "$GDBus_compare" ] && [ "$GDBus_CommonName1" == "$GDBus_CommonName2" ]; then
      echo "No new notification(s) up"
   else

      if [ "$GDBus_Num" != "$GDBus_compare" ] && [ "$GDBus_CommonName1" == "$GDBus_CommonName2" ]; then
	 echo "up num not same name same"
         gdbus call --session --dest org.freedesktop.Notifications --object-path /org/freedesktop/Notifications --method org.freedesktop.Notifications.Notify "notify-send" 1 "phone" "$string_AppName" "$string_AppNum" "[]" '{}' 5000
      else

	 if [ "$GDBus_Num" == "$GDBus_compare" ] && [ "$GDBus_CommonName1" != "$GDBus_CommonName2" ]; then
	    echo "up num same name not same"
	    gdbus call --session --dest org.freedesktop.Notifications --object-path /org/freedesktop/Notifications --method org.freedesktop.Notifications.Notify "notify-send" 1 "phone" "$string_AppName" "$string_AppNum" "[]" '{}' 5000
	 else

            if [ "$GDBus_Num" != "$GDBus_compare" ] && [ "$GDBus_CommonName1" != "$GDBus_CommonName2" ]; then
	       echo "up num not same app name not same"
                gdbus call --session --dest org.freedesktop.Notifications --object-path /org/freedesktop/Notifications --method org.freedesktop.Notifications.Notify "notify-send" 1 "phone" "$string_AppName2" "$string_AppNum2" "[]" '{}' 5000
	    else

	       if [ -f $HOME/.cache/waynotif/notifications/android_process ]; then
		  echo "up android process"
	           gdbus call --session --dest org.freedesktop.Notifications --object-path /org/freedesktop/Notifications --method org.freedesktop.Notifications.Notify "notify-send" 1 "phone" "$string_AppName2" "$string_AppNum2" "[]" '{}' 5000
	       else
	          echo "No notification(s) empty up"
	       fi

            fi

         fi

      fi

   fi

   rm $HOME/.cache/waynotif/notifications/ran -f

else

      notifs=$(echo dumpsys notification | sudo waydroid shell | egrep NotificationRecord | awk -F\| '{print $2}')
      old_notifs=$(cat $HOME/.cache/waynotif/notifications2/initial_notifications)

      # Compare whether or not our old notifications and new ones are the same to avoid duplicates.

      if [ "$notifs" == "$old_notifs" ]; then
         echo "No new notification(s) oldnotif notif"
      else

	 # The rest of this is a slightly editted version of above to make sure everything runs smoothly.
         echo dumpsys notification | sudo waydroid shell | egrep NotificationRecord | awk -F\| '{print $2}' > $HOME/.cache/waynotif/notifications2/initial_notifications
         int=1
	 rm $HOME/.cache/waynotif/notifications2/commonname -f
	 rm $HOME/.cache/waynotif/notifications2/android_process -f

         while IFS= read -r line; do

              name=$(echo $line)
	      if [ "$name" == "android" ]; then
		 touch $HOME/.cache/waynotif/notifications2/android_process
		 true
	      else
                 waydroid app list | grep -B 1 $name | grep -w 'Name' | cut -c 7- >> $HOME/.cache/waynotif/notifications2/commonname
              fi

              int=$((int+1))

         done < $HOME/.cache/waynotif/notifications2/initial_notifications


	 if [ ! -f $HOME/.cache/waynotif/notifications2/commonname ]; then
	    echo "No notifications available. down"
	    exit 1
	 fi


         awk '!seen[$0]++' $HOME/.cache/waynotif/notifications2/commonname > $HOME/.cache/waynotif/notifications2/commonname_clean
         cat $HOME/.cache/waynotif/notifications2/commonname | uniq --count | cut -c7 - > $HOME/.cache/waynotif/notifications2/commonname_notif_number

         int2=1


         while IFS= read -r line; do

              echo $line > $HOME/.cache/waynotif/notifications2/notif_seperate-$int2
              int2=$((int2+1))

         done < $HOME/.cache/waynotif/notifications2/commonname_notif_number


         int3=1


         while IFS= read -r line; do

              echo $line > $HOME/.cache/waynotif/notifications2/commonname_clean_$int3
              int3=$((int3+1))

         done < $HOME/.cache/waynotif/notifications2/commonname_clean


         GDBus_Num=$(cat $HOME/.cache/waynotif/notifications2/notif_seperate-1)

         GDBus_Name=$(cat $HOME/.cache/waynotif/notifications2/commonname_clean_1)

	 GDBus_Num2=$(cat $HOME/.cache/waynotif/notifications/notif_seperate-2)

	 GDBus_Name2=$(cat $HOME/.cache/waynotif/notifications/commonname_clean_2)

         string_AppName="Waydroid $GDBus_Name"

         string_AppNum="You have $GDBus_Num notification(s)"

	 string_AppName2="Waydroid $GDBus_Name2"

	 string_AppNum2="You have $GDBus_Num2 notification(s)"

	 GDBus_CommonName1=$(cat $HOME/.cache/waynotif/notifications2/commonname_clean_1)

	 GDBus_CommonName2=$(cat $HOME/.cache/waynotif/notifications/commonname_clean_1)

	 GDBus_compare=$(cat $HOME/.cache/waynotif/notifications/notif_seperate-1)

	 echo "ran down"

	 # The first fix.
	 if [ -f $HOME/.cache/waynotif/notifications2/first_run ]; then

	     gdbus call --session --dest org.freedesktop.Notifications --object-path /org/freedesktop/Notifications --method org.freedesktop.Notifications.Notify "notify-send" 1 "phone" "$string_AppName" "$string_AppNum" "[]" '{}' 5000
	    echo "first run notif down"
	    rm $HOME/.cache/waynotif/notifications2/first_run -f
	    exit 1

	 fi

	 touch $HOME/.cache/waynotif/notifications/ran

	 if [ "$GDBus_Num" == "$GDBus_compare" ] && [ "$GDBus_CommonName1" == "$GDBus_CommonName2" ]; then
            echo "No new notification(s) down"
         else

            if [ "$GDBus_Num" != "$GDBus_compare" ] && [ "$GDBus_CommonName1" == "$GDBus_CommonName2" ]; then
	       echo "down num not same name same"
               gdbus call --session --dest org.freedesktop.Notifications --object-path /org/freedesktop/Notifications --method org.freedesktop.Notifications.Notify "notify-send" 1 "phone" "$string_AppName" "$string_AppNum" "[]" '{}' 5000
            else
	       if [ "$GDBus_Num" == "$GDBus_compare" ] && [ "$GDBus_CommonName1" != "$GDBus_CommonName2" ]; then
		  echo "down num same name not same"
	          gdbus call --session --dest org.freedesktop.Notifications --object-path /org/freedesktop/Notifications --method org.freedesktop.Notifications.Notify "notify-send" 1 "phone" "$string_AppName" "$string_AppNum" "[]" '{}' 5000
	       else

                  if [ "$GDBus_Num" != "$GDBus_compare" ] && [ "$GDBus_CommonName1" != "$GDBus_CommonName2" ]; then
		     echo "down num not same name not same"
                     gdbus call --session --dest org.freedesktop.Notifications --object-path /org/freedesktop/Notifications --method org.freedesktop.Notifications.Notify "notify-send" 1 "phone" "$string_AppName2" "$string_AppNum2" "[]" '{}' 5000
                  else

  	             if [ -f $HOME/.cache/waynotif/notifications/android_process ]; then
		        echo "down android process"
	                gdbus call --session --dest org.freedesktop.Notifications --object-path /org/freedesktop/Notifications --method org.freedesktop.Notifications.Notify "notify-send" 1 "phone" "$string_AppName2" "$string_AppNum2" "[]" '{}' 5000
	             else
                        echo "No notification(s) empty down"
		     fi

		  fi

	       fi

            fi

         fi

      fi

fi
